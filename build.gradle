buildscript {
  ext {
    springBootVersion = "1.3.0.RELEASE"
  }
  
  repositories {
    mavenCentral()
  }
  
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
  }
}

// Plugins
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'jacoco'

// Jar configuration
jar {
  baseName = "spring-boot-starter"
  version = "0.0.1-SNAPSHOT"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Dependency configuration
repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-actuator")
  compile("org.springframework.boot:spring-boot-starter-aop")
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.projectlombok:lombok")
  testCompile("org.springframework.boot:spring-boot-starter-test") 
}

dependencyManagement {
  imports { 
    // Used by Lombok dependency
    mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M3" 
  }
}

// Eclipse configuration
eclipse {    
  classpath {
    containers.remove("org.eclipse.jdt.launching.JRE_CONTAINER")
    containers "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"
  }
}

// Checkstyle configuration
checkstyle {
  toolVersion = "6.13"
}

checkstyleMain << {
  ant.xslt(in: reports.xml.destination,
    style: new File('config/checkstyle/checkstyle-noframes-sorted.xsl'),
    out: new File(reports.xml.destination.parent, 'main.html'))
}

checkstyleTest << {
  ant.xslt(in: reports.xml.destination,
    style: new File('config/checkstyle/checkstyle-noframes-sorted.xsl'),
    out: new File(reports.xml.destination.parent, 'test.html'))
}

// Findbugs configuration
tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

// PMD configuration
tasks.withType(Pmd) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

// Jacoco configuration
jacocoTestReport {
  reports {
    xml.enabled = false
    csv.enabled = false
    html.destination = "${buildDir}/reports/jacoco"
  }
}

// Wrapper configuration
task wrapper(type: Wrapper) {
  gradleVersion = "2.7"
}
